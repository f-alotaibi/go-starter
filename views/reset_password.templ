package views

import "github.com/f-alotaibi/go-starter/views/components/button"
import "github.com/f-alotaibi/go-starter/views/components/input"
import "github.com/f-alotaibi/go-starter/views/components/form"
import "github.com/f-alotaibi/go-starter/views/components/label"

templ ResetPassword(success bool) {
	<!DOCTYPE HTML>
	<html class="dark">
		<head>
			<title>go-starter</title>
			<link rel="stylesheet" href="/assets/public/main.css"/>
			@input.Script()
			@label.Script()
		</head>
		<body class="min-h-screen">
			<div class="h-full flex flex-col">
				<main class="flex-1">
					<div class="flex flex-col justify-center items-center h-full pb-5">
						<div class="mx-auto flex w-full flex-col justify-center px-5 pt-0 md:h-[unset] md:max-w-[50%] h-full lg:max-w-[50%] lg:px-6">
							<div class="my-auto mb-auto mt-8 flex flex-col md:mt-[70px] w-[350px] max-w-[450px] mx-auto md:max-w-[450px] lg:mt-[130px] lg:max-w-[450px]">
								<p class="text-[32px] font-bold">Reset your password</p>
								<p class="mb-2.5 mt-2.5 font-normal text-muted-foreground">Enter your email and we'll send you a link to reset your password</p>
								<div class="relative my-4">
									<div class="relative flex items-center py-1">
										<div class="grow border-t border-input"></div>
									</div>
								</div>
								<div>
									<form novalidate="" method="post" class="mb-4">
										@form.CSRF()
										if success {
											@form.Message(form.MessageProps{
												Class: "text-green-300",
											}) {
												We've sent a password reset link to { ctx.Value("pwdResetEmail").(string) }
											}
										}
										@form.Error("result") {
											@form.Message(form.MessageProps{
												Variant: form.MessageVariantError,
											}) {
												{ form.ErrorMessage(ctx, "result") }
											}
										}
										<div class="grid gap-2">
											<div class="grid gap-1">
												@form.Item() {
													@form.Label(form.LabelProps{
														For: "email",
													}) {
														Email
													}
													@form.Description() {
														Enter your user's email address.
													}
													@input.Input(input.Props{
														ID:          "email",
														Type:        input.TypeEmail,
														Placeholder: "user@example.com",
														Name:        "email",
														Class:       "py-6",
														HasError:    form.ErrorMessage(ctx, "email") != "" || form.ErrorMessage(ctx, "result") != "",
													})
													@form.Error("email") {
														@form.Message(form.MessageProps{
															Variant: form.MessageVariantError,
														}) {
															{ form.ErrorMessage(ctx, "email") }
														}
													}
												}
											</div>
											@button.Button(button.Props{
												Type:      "submit",
												Variant:   button.VariantDefault,
												Class:     "mt-6 py-6 text-base",
												FullWidth: true,
												Size:      button.SizeLg,
											}) {
												Reset Password
											}
										</div>
									</form>
									<div class="relative my-4">
										<div class="relative flex items-center py-1">
											<div class="grow border-t border-input"></div>
										</div>
									</div>
									<p>
										<a href="/signup" class="font-medium text-white text-sm">Remember your account? Sign up</a>
									</p>
								</div>
							</div>
						</div>
					</div>
				</main>
			</div>
		</body>
	</html>
}
